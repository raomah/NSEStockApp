/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import java.awt.List;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import static javax.xml.catalog.CatalogManager.catalog;
import Model.Cars;
import Model.CarsCatalog;

/**
 *
 * @author rao.mah
 */
public class SearchJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SearchJPanel
     */
        CarsCatalog catalog;
DefaultTableModel model;
    public SearchJPanel(CarsCatalog catalog) {
        initComponents();
                this.catalog=catalog;
                
populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SearchJpanel = new javax.swing.JPanel();
        btnSearch = new javax.swing.JButton();
        cbSearch = new javax.swing.JComboBox<>();
        txtSearchManufacturedBy = new javax.swing.JTextField();
        cbIsAvailable = new javax.swing.JCheckBox();
        txtSearchManufacturedDate = new javax.swing.JTextField();
        cbSearchLowSeats = new javax.swing.JComboBox<>();
        txtSearchGeolocation = new javax.swing.JTextField();
        txtSearchSerialNumber = new javax.swing.JTextField();
        cbSearchCertificateExpired = new javax.swing.JCheckBox();
        txtSearchModelNumber = new javax.swing.JTextField();
        lblManufacturedBy = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lblSeats = new javax.swing.JLabel();
        lblSearchGeolocation = new javax.swing.JLabel();
        lblSearchSerialNumber = new javax.swing.JLabel();
        lblSearchModelNumber = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCars = new javax.swing.JTable();
        cbSearchHighSeats = new javax.swing.JComboBox<>();
        lbllastUpdate = new javax.swing.JLabel();
        txtLastUpdate = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        SearchJpanel.setBackground(new java.awt.Color(218, 234, 246));
        SearchJpanel.setPreferredSize(new java.awt.Dimension(1000, 620));

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        cbSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Search Fields", "Find me the first available passenger car?", "List all the car manufacturers used by the Uber?" }));
        cbSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSearchActionPerformed(evt);
            }
        });

        txtSearchManufacturedBy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchManufacturedByActionPerformed(evt);
            }
        });
        txtSearchManufacturedBy.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchManufacturedByKeyReleased(evt);
            }
        });

        cbIsAvailable.setText("Availability");
        cbIsAvailable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbIsAvailableActionPerformed(evt);
            }
        });

        txtSearchManufacturedDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchManufacturedDateActionPerformed(evt);
            }
        });

        cbSearchLowSeats.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "4", "6", "8" }));
        cbSearchLowSeats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSearchLowSeatsActionPerformed(evt);
            }
        });

        txtSearchSerialNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchSerialNumberActionPerformed(evt);
            }
        });

        cbSearchCertificateExpired.setText("Certificate Validity");
        cbSearchCertificateExpired.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSearchCertificateExpiredActionPerformed(evt);
            }
        });

        lblManufacturedBy.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblManufacturedBy.setText("Manufactured by:");
        lblManufacturedBy.setAutoscrolls(true);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Manufacturing Year:");

        lblSeats.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblSeats.setText("Seats:");

        lblSearchGeolocation.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblSearchGeolocation.setText("Geolocation:");

        lblSearchSerialNumber.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblSearchSerialNumber.setText("Serial number:");

        lblSearchModelNumber.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblSearchModelNumber.setText("Model number:");

        jScrollPane1.setPreferredSize(new java.awt.Dimension(900, 700));

        tblCars.setBackground(new java.awt.Color(0, 184, 255));
        tblCars.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Manufactured by", "Manufactured date", "Serial no.", "Model no.", "Geolocation", "Seats", "Availablility", "Certificate Expiry"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Byte.class, java.lang.Boolean.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCars.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tblCars.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        jScrollPane1.setViewportView(tblCars);

        cbSearchHighSeats.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "2", "4", "6", "8" }));

        lbllastUpdate.setText("Last Searched At:");

        txtLastUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLastUpdateActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("SEARCH CAR DETAILS");

        jLabel5.setText("To");

        javax.swing.GroupLayout SearchJpanelLayout = new javax.swing.GroupLayout(SearchJpanel);
        SearchJpanel.setLayout(SearchJpanelLayout);
        SearchJpanelLayout.setHorizontalGroup(
            SearchJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SearchJpanelLayout.createSequentialGroup()
                .addGroup(SearchJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SearchJpanelLayout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(SearchJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(SearchJpanelLayout.createSequentialGroup()
                                .addGap(62, 62, 62)
                                .addGroup(SearchJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(SearchJpanelLayout.createSequentialGroup()
                                        .addGroup(SearchJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lblManufacturedBy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lblSeats, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(SearchJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(SearchJpanelLayout.createSequentialGroup()
                                                .addGroup(SearchJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(txtSearchManufacturedBy, javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txtSearchManufacturedDate, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, SearchJpanelLayout.createSequentialGroup()
                                                        .addComponent(cbSearchLowSeats, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(12, 12, 12)
                                                        .addComponent(jLabel5)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(cbSearchHighSeats, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                                .addGap(18, 18, 18)
                                                .addGroup(SearchJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(lblSearchModelNumber)
                                                    .addGroup(SearchJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(lblSearchGeolocation, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(lblSearchSerialNumber, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                                .addGap(18, 18, 18)
                                                .addGroup(SearchJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(txtSearchGeolocation, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                                                    .addComponent(txtSearchSerialNumber)
                                                    .addComponent(txtSearchModelNumber)))
                                            .addGroup(SearchJpanelLayout.createSequentialGroup()
                                                .addComponent(cbIsAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(cbSearchCertificateExpired))))
                                    .addGroup(SearchJpanelLayout.createSequentialGroup()
                                        .addGap(102, 102, 102)
                                        .addComponent(cbSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SearchJpanelLayout.createSequentialGroup()
                                .addComponent(lbllastUpdate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtLastUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 647, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(SearchJpanelLayout.createSequentialGroup()
                        .addGap(368, 368, 368)
                        .addComponent(btnSearch)))
                .addContainerGap(288, Short.MAX_VALUE))
        );
        SearchJpanelLayout.setVerticalGroup(
            SearchJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SearchJpanelLayout.createSequentialGroup()
                .addContainerGap(121, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(21, 21, 21)
                .addComponent(cbSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SearchJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearchManufacturedBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearchGeolocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblManufacturedBy)
                    .addComponent(lblSearchGeolocation))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SearchJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSearchSerialNumber, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(SearchJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtSearchManufacturedDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)
                        .addComponent(lblSearchSerialNumber)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SearchJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSeats)
                    .addComponent(cbSearchLowSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearchModelNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSearchModelNumber)
                    .addComponent(cbSearchHighSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(22, 22, 22)
                .addGroup(SearchJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbSearchCertificateExpired)
                    .addComponent(cbIsAvailable))
                .addGap(13, 13, 13)
                .addComponent(btnSearch)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SearchJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtLastUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbllastUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SearchJpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SearchJpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cbSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSearchActionPerformed
         // TODO add your handling code here
    }//GEN-LAST:event_cbSearchActionPerformed

    private void txtSearchManufacturedByActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchManufacturedByActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchManufacturedByActionPerformed

    private void txtSearchManufacturedDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchManufacturedDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchManufacturedDateActionPerformed

    private void cbIsAvailableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbIsAvailableActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbIsAvailableActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:

    String selectedValue=cbSearch.getSelectedItem().toString();

if(selectedValue.equals("Find me the first available passenger car."))
{
     DefaultTableModel model = (DefaultTableModel) tblCars.getModel();
        model.setRowCount(0);
        for(Cars car: catalog.getCatalog()){
        Object[] row=new Object[10];
        row[0]=car;
                if(car.Available()==true){
                row[1]=car.getManufactured_by();
        row[2]=car.getManufactured_year();
        row[3]=car.getSerial_number();
        row[4]=car.getModel_number();
        row[6]=car.getSeats();
        row[7]=car.Available();
        row[8]=car.getmaintanance_certificate();
        row[5]=car.getlocation();
                model.addRow(row);
                break;

        }
        }
}
else if(selectedValue.equals("List all the car manufacturers used by the Uber."))
{
     DefaultTableModel model = (DefaultTableModel) tblCars.getModel();
        model.setRowCount(0);
        ArrayList<String> num = new ArrayList<String>();

        for(Cars car: catalog.getCatalog()){
        Object[] row=new Object[10];
       if(! num.contains(car.getManufactured_by())){
           num.add((car.getManufactured_by()));
                row[1]=car.getManufactured_by();
                    model.addRow(row);
       }
        }
        }
else{
      String mfBy= txtSearchManufacturedBy.getText();
       String mfDt= txtSearchManufacturedDate.getText();
     String GeoLocation=   txtSearchGeolocation.getText();

      Byte lowSeats=   Byte.parseByte(cbSearchLowSeats.getSelectedItem().toString());
      Byte highSeats=   Byte.parseByte(cbSearchHighSeats.getSelectedItem().toString());

      String SerialNumber=   txtSearchSerialNumber.getText() ;
     String ModelNumber=  txtSearchModelNumber.getText();
    Boolean availablity=  cbIsAvailable.isSelected();
     Boolean certification=   cbSearchCertificateExpired.isSelected();
   System.out.println(lowSeats);
        System.out.println(highSeats);


        DefaultTableModel model = (DefaultTableModel) tblCars.getModel();
        model.setRowCount(0);
        for(Cars car: catalog.getCatalog()){
        Object[] row=new Object[10];
        
        row[0]=car;

        if(mfBy.length()==0 || car.getManufactured_by().equals(mfBy) ){
            if(mfDt.length()==0 || car.getManufactured_year()==Integer.parseInt(mfDt)){
            if(SerialNumber.length()==0 || car.getSerial_number().equals(SerialNumber)){
            if(GeoLocation.length()==0 || car.getlocation().equals(GeoLocation)){
             if((lowSeats==0 && highSeats==0) || (car.getSeats()>=lowSeats &&car.getSeats()<=highSeats)){
            if(ModelNumber.length()==0  || car.getModel_number().equals(ModelNumber)){
            if(availablity==false || car.Available()==availablity){
            if(certification==false || car.getmaintanance_certificate()==certification){
        row[1]=car.getManufactured_by();
        row[2]=car.getManufactured_year();
        row[3]=car.getSerial_number();
        row[4]=car.getModel_number();
        row[6]=car.getSeats();
        row[7]=car.Available();
        row[8]=car.getmaintanance_certificate();
        row[5]=car.getlocation();
                model.addRow(row);

        }
        }
        }
        }
        }
        }
        }
        }
        }}
    }//GEN-LAST:event_btnSearchActionPerformed

    private void txtSearchManufacturedByKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchManufacturedByKeyReleased
        // TODO add your handling code here:
//        
//        String query=txtSearchManufacturedBy.getText().toLowerCase();
//        System.out.println(query);
//                filter(query);
    }//GEN-LAST:event_txtSearchManufacturedByKeyReleased

    private void txtSearchSerialNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchSerialNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchSerialNumberActionPerformed

    private void cbSearchLowSeatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSearchLowSeatsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbSearchLowSeatsActionPerformed

    private void txtLastUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLastUpdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLastUpdateActionPerformed

    private void cbSearchCertificateExpiredActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSearchCertificateExpiredActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbSearchCertificateExpiredActionPerformed
     private void populateTable() {
        SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");  

        txtLastUpdate.setText(formatter.format(catalog.getLast_Updated()));
        DefaultTableModel model = (DefaultTableModel) tblCars.getModel();
        model.setRowCount(0);
        for(Cars car: catalog.getCatalog()){
        Object[] row=new Object[10];
        row[0]=car;
        row[1]=car.getManufactured_by();
        row[2]=car.getManufactured_year();
        row[3]=car.getSerial_number();
        row[4]=car.getModel_number();
        row[6]=car.getSeats();
        row[7]=car.Available();
        row[8]=car.getmaintanance_certificate();
        row[5]=car.getlocation();
//        row[5]=car.getName();
model.addRow(row);
        }
    }
//    private void populateTable() {
//        DefaultTableModel model = (DefaultTableModel) tblCars.getModel();
//        model.setRowCount(0);
//        for(Cars car: catalog.getCatalog()){
//        Object[] row=new Object[6];
//        row[0]=car;
//        row[1]=car.getManufactured_by();
//        row[2]=car.getManufactured_year();
//        row[3]=car.getSerial_number();
//        row[4]=car.getModel_number();
////        row[5]=car.getName();
//model.addRow(row);
//        }
//    }
    private void filter(String query){
       model = (DefaultTableModel) tblCars.getModel();

        TableRowSorter<DefaultTableModel> tr =new TableRowSorter<>(model);
                                  System.out.println(tr);

        tblCars.setRowSorter(tr);
                System.out.println(query);
                          System.out.println(tr);

        tr.setRowFilter(RowFilter.regexFilter(query));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel SearchJpanel;
    private javax.swing.JButton btnSearch;
    private javax.swing.JCheckBox cbIsAvailable;
    private javax.swing.JComboBox<String> cbSearch;
    private javax.swing.JCheckBox cbSearchCertificateExpired;
    private javax.swing.JComboBox<String> cbSearchHighSeats;
    private javax.swing.JComboBox<String> cbSearchLowSeats;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblManufacturedBy;
    private javax.swing.JLabel lblSearchGeolocation;
    private javax.swing.JLabel lblSearchModelNumber;
    private javax.swing.JLabel lblSearchSerialNumber;
    private javax.swing.JLabel lblSeats;
    private javax.swing.JLabel lbllastUpdate;
    private javax.swing.JTable tblCars;
    private javax.swing.JTextField txtLastUpdate;
    private javax.swing.JTextField txtSearchGeolocation;
    private javax.swing.JTextField txtSearchManufacturedBy;
    private javax.swing.JTextField txtSearchManufacturedDate;
    private javax.swing.JTextField txtSearchModelNumber;
    private javax.swing.JTextField txtSearchSerialNumber;
    // End of variables declaration//GEN-END:variables
}
