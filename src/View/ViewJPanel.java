/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Model.Cars;
import Model.CarsCatalog;

/**
 *
 * @author rao.mah
 */
public class ViewJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewJPanel
     */
    CarsCatalog catalog;
    public ViewJPanel(CarsCatalog catalog ) {
        initComponents();
        this.catalog=catalog;

        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblViewCars = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCars = new javax.swing.JTable();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        txtManufacturedBy = new javax.swing.JTextField();
        txtSerialNumber = new javax.swing.JTextField();
        txtSeats = new javax.swing.JTextField();
        lblModelNumber = new javax.swing.JLabel();
        lblManufacturedYear = new javax.swing.JLabel();
        txtManufacturedYear = new javax.swing.JTextField();
        lblMaintananceCertificate = new javax.swing.JLabel();
        lblSeats = new javax.swing.JLabel();
        chkMaintainanceCertificate = new javax.swing.JCheckBox();
        chkIsAvailable = new javax.swing.JCheckBox();
        txtModelNumber = new javax.swing.JTextField();
        lblGeoLocation = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        txtGeoLocation = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        lblIsAvailable = new javax.swing.JLabel();
        lblManufacturedBy = new javax.swing.JLabel();
        lblSerialNumber = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        btnImport = new javax.swing.JButton();
        txtLastUpdate = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(221, 237, 234));
        setPreferredSize(new java.awt.Dimension(904, 961));

        lblViewCars.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        lblViewCars.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblViewCars.setText("VIEW OR UPDATE CAR DETAILS");

        jScrollPane1.setPreferredSize(new java.awt.Dimension(900, 700));

        tblCars.setBackground(new java.awt.Color(0, 192, 167));
        tblCars.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tblCars.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Manufactured by", "Manufactured date", "Serial no.", "Model no.", "Geolocation", "Seats", "Availability", "Certificate Expired"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Byte.class, java.lang.Boolean.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCars.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tblCars.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        jScrollPane1.setViewportView(tblCars);

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        lblModelNumber.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblModelNumber.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblModelNumber.setText("Model Number:");

        lblManufacturedYear.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblManufacturedYear.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblManufacturedYear.setText("Manufacturing Year:");

        lblMaintananceCertificate.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblMaintananceCertificate.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblMaintananceCertificate.setText("Expiry:");

        lblSeats.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblSeats.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblSeats.setText("Number of Seats:");

        chkIsAvailable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkIsAvailableActionPerformed(evt);
            }
        });

        lblGeoLocation.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblGeoLocation.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblGeoLocation.setText("Location:");

        lblName.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblName.setText("Name:");

        txtGeoLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGeoLocationActionPerformed(evt);
            }
        });

        lblIsAvailable.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblIsAvailable.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblIsAvailable.setText("Availability");

        lblManufacturedBy.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblManufacturedBy.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblManufacturedBy.setText("Manufactured by:");

        lblSerialNumber.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblSerialNumber.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblSerialNumber.setText("Serial Number:");

        btnUpdate.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnImport.setText("Import Data");
        btnImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportActionPerformed(evt);
            }
        });

        txtLastUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLastUpdateActionPerformed(evt);
            }
        });

        jLabel1.setText("Last Upadated on:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblViewCars, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblIsAvailable, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblGeoLocation, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblModelNumber, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblSerialNumber, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblSeats, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblManufacturedYear, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                            .addComponent(lblManufacturedBy, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblMaintananceCertificate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(chkIsAvailable, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
                            .addComponent(txtGeoLocation, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtModelNumber, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSerialNumber, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSeats, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtManufacturedYear, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtName, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtManufacturedBy, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkMaintainanceCertificate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(335, 335, 335)
                        .addComponent(btnUpdate)))
                .addContainerGap(376, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 813, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnImport)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtLastUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(58, 58, 58))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lblViewCars, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnImport)
                    .addComponent(btnEdit)
                    .addComponent(btnDelete)
                    .addComponent(txtLastUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblManufacturedBy)
                    .addComponent(txtManufacturedBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblManufacturedYear)
                    .addComponent(txtManufacturedYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSeats)
                    .addComponent(txtSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSerialNumber)
                    .addComponent(txtSerialNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblModelNumber)
                    .addComponent(txtModelNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGeoLocation)
                    .addComponent(txtGeoLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblIsAvailable)
                    .addComponent(chkIsAvailable))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMaintananceCertificate)
                    .addComponent(chkMaintainanceCertificate, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnUpdate)
                .addContainerGap(420, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
         // TODO add your handling code here:
         int selectedRowIndex=tblCars.getSelectedRow();
         if(selectedRowIndex<0){
             JOptionPane.showMessageDialog(this, "Please Select a Row");
         }
        DefaultTableModel model = (DefaultTableModel) tblCars.getModel();
        System.out.println(model.getValueAt(selectedRowIndex,0));
        Cars selectedCar=(Cars) model.getValueAt(selectedRowIndex,0);
                System.out.println(selectedCar);

        catalog.deleteCar(selectedCar);
        JOptionPane.showMessageDialog(this, "Car Entry Successfully Deleted");
        populateTable();
    SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");  
    Date date = new Date();  
    catalog.setLast_Updated(date);
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void chkIsAvailableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkIsAvailableActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkIsAvailableActionPerformed

    private void txtGeoLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGeoLocationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGeoLocationActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
         // TODO add your handling code here: 
         int selectedRowIndex=tblCars.getSelectedRow();
         if(selectedRowIndex<0){
             JOptionPane.showMessageDialog(this, "Please Select a Row");
         }
        DefaultTableModel model = (DefaultTableModel) tblCars.getModel();
//        Cars selectedCar=(Cars) model.getValueAt(selectedRowIndex,0);
        txtName.setText(String.valueOf(model.getValueAt(selectedRowIndex, 0)));
        txtManufacturedBy.setText(String.valueOf(model.getValueAt(selectedRowIndex, 1)));
        txtManufacturedYear.setText(String.valueOf(model.getValueAt(selectedRowIndex, 2)));
        txtGeoLocation.setText(String.valueOf(model.getValueAt(selectedRowIndex, 5)));
        txtModelNumber.setText(String.valueOf(model.getValueAt(selectedRowIndex, 4)));
        txtSerialNumber.setText(String.valueOf(model.getValueAt(selectedRowIndex, 3)));
        chkIsAvailable.setSelected(Boolean.valueOf(model.getValueAt(selectedRowIndex, 7).toString()));
        chkMaintainanceCertificate.setSelected(Boolean.valueOf(model.getValueAt(selectedRowIndex, 8).toString()));
        txtSeats.setText(String.valueOf(String.valueOf(model.getValueAt(selectedRowIndex, 6))));

    }//GEN-LAST:event_btnEditActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
          int selectedRowIndex=tblCars.getSelectedRow();
         if(selectedRowIndex<0){
             JOptionPane.showMessageDialog(this, "Please Select a Row");
         }
        DefaultTableModel model = (DefaultTableModel) tblCars.getModel();
        Cars selectedCar=(Cars) model.getValueAt(selectedRowIndex,0);
       selectedCar.setName(txtName.getText());
       selectedCar.setManufactured_by(txtManufacturedBy.getText());
       selectedCar.setManufactured_year(Integer.parseInt(txtManufacturedYear.getText()));
       selectedCar.setlocation(txtGeoLocation.getText());
       selectedCar.setSeats(Byte.parseByte(txtSeats.getText()));
       selectedCar.setSerial_number(txtSerialNumber.getText() );
       selectedCar.setModel_number(txtModelNumber.getText());
       selectedCar.setAvailable(chkIsAvailable.isSelected());
       selectedCar.setmaintanance_certificate(chkMaintainanceCertificate.isSelected());
       JOptionPane.showMessageDialog(this, "Entry Updated Successfully");
     SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");  
    Date date = new Date();  
    catalog.setLast_Updated(date);
            txtLastUpdate.setText(formatter.format(catalog.getLast_Updated()));

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportActionPerformed
        // TODO add your handling code here:
                addDummyData();
    SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");  
    
    Date date = new Date();  
    catalog.setLast_Updated(date);
    txtLastUpdate.setText(formatter.format(catalog.getLast_Updated()));

    }//GEN-LAST:event_btnImportActionPerformed

    private void txtLastUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLastUpdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLastUpdateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnImport;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JCheckBox chkIsAvailable;
    private javax.swing.JCheckBox chkMaintainanceCertificate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblGeoLocation;
    private javax.swing.JLabel lblIsAvailable;
    private javax.swing.JLabel lblMaintananceCertificate;
    private javax.swing.JLabel lblManufacturedBy;
    private javax.swing.JLabel lblManufacturedYear;
    private javax.swing.JLabel lblModelNumber;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblSeats;
    private javax.swing.JLabel lblSerialNumber;
    private javax.swing.JLabel lblViewCars;
    private javax.swing.JTable tblCars;
    private javax.swing.JTextField txtGeoLocation;
    private javax.swing.JTextField txtLastUpdate;
    private javax.swing.JTextField txtManufacturedBy;
    private javax.swing.JTextField txtManufacturedYear;
    private javax.swing.JTextField txtModelNumber;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtSeats;
    private javax.swing.JTextField txtSerialNumber;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblCars.getModel();
        model.setRowCount(0);
        for(Cars car: catalog.getCatalog()){
        Object[] row=new Object[10];
        row[0]=car;
        row[1]=car.getManufactured_by();
        row[2]=car.getManufactured_year();
        row[3]=car.getSerial_number();
        row[4]=car.getModel_number();
        row[6]=car.getSeats();
        row[7]=car.Available();
        row[8]=car.getmaintanance_certificate();
        row[5]=car.getlocation();
//        row[5]=car.getName();
model.addRow(row);
        }
    }
     private void addDummyData() {
        
        String filePath="C:\\Users\\Baap\\Desktop\\mahima\\lab 2 cars\\lab 2\\src\\File\\dummy.txt";
        File file =new File(filePath);
//        try{
        try {
          FileReader fr = new FileReader(file);
         BufferedReader br=new BufferedReader(fr);
         DefaultTableModel model = (DefaultTableModel) tblCars.getModel();
         Object[] lines=br.lines().toArray();
         for(int i=0;i<lines.length;i++){
        Object[] row=lines[i].toString().split(" ");
              Cars car=catalog.addNewCar();
       car.setName(String.valueOf(row[0]));
       car.setManufactured_by(String.valueOf(row[1]));
       car.setManufactured_year(Integer.valueOf(row[2].toString()));
       car.setlocation(String.valueOf(row[5]));
       car.setSeats(Byte.valueOf(row[6].toString()));
       car.setSerial_number(String.valueOf(row[3]) );
       car.setModel_number(String.valueOf(row[4]));
       car.setAvailable(Boolean.valueOf(row[7].toString()));
       car.setmaintanance_certificate(Boolean.valueOf(row[8].toString()));
        model.addRow(row); 
         }        

     }
        catch (FileNotFoundException ex) {
            Logger.getLogger(ViewJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
   
    }
}
